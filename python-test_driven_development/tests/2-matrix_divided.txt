>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic test
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Ensure matrix not modified
>>> matrix
[[1, 2, 3], [4, 5, 6]]

# Single element matrix
>>> matrix_divided([[1]], 1)
[[1.0]]

# Floats in matrix
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 0.5)
[[3.0, 5.0], [7.0, 9.0]]

# Mixed ints and floats
>>> matrix_divided([[1, 2.5], [3, 4.5]], 2)
[[0.5, 1.25], [1.5, 2.25]]

# div is float
>>> matrix_divided([[1, 2], [3, 4]], 2.0)
[[0.5, 1.0], [1.5, 2.0]]

# Division by zero
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Non-uniform row lengths
>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Non-numeric element in matrix
>>> matrix_divided([[1, 2], [3, "4"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Matrix not a list of lists
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# div is not a number
>>> matrix_divided([[1, 2], [3, 4]], "not a number")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# div is NaN
>>> matrix_divided([[1, 2], [3, 4]], float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

# div is infinity
>>> matrix_divided([[1, 2], [3, 4]], float('inf'))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

# Missing matrix
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# Missing div
>>> matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
