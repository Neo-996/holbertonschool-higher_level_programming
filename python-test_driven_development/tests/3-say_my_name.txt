 >>> say_my_name = __import__('3-say_my_name').say_my_name

~~~~~~~~~~
This function takes two strings meant to represent your given name and family name, and prints the full name:

    >>> say_my_name("Dave", "Bowman")
    My name is Dave Bowman

The function will accept empty strings or just one argument. Since the last name defaults to an empty string, a single argument will be treated as a first name, including a space character:

empty last name (space before newline):
    >>> say_my_name("Frank", "")
    My name is Frank 

only one name (space before newline):
    >>> say_my_name("Frank")
    My name is Frank 

empty first name (no space before newline):
    >>> say_my_name("", "Poole")
    My name is Poole

Exceptions
~~~~~~~~~~
If first name string argument is not a string, a TypeError of "first_name must be a string" will arise. Similarly, "last_name must be a string" for the last name argument.

first name is not a string:
    >>> say_my_name(2001, "Bowman")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

only name (treated as first) is not a string:
    >>> say_my_name(2001)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

last name is not a string:
    >>> say_my_name("Dave", 2010)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
